---
title: "Modelo preditivo usando com rede neural"
author: "Marcelo Carvalho dos Anjos"
date: "2022-08-06"
categories: [Modelos]
image: "neural_class.png"
---

### [**O que é um modelo de rede neural**]{style="color: #5AC8BE ;"}

-   Rede neural é uma técnica que usa nós interconectados ou neuronios em uma estrutura de camadas com o objetivo de resolver problemas de previsão.

    ::: panel-tabset
    ## Rede neural regressão

    ![Rede Neural - Regressão](neural_reg.png){alt="Rede Neural - Regressão" width="605"}

    ## Rede neural Classificação

    ![Rede Neural - Classificação](neural_class.png){alt="Rede Neural - Classificação" width="605"}
    :::

### [**Qual o objetivo**]{style="color: #5AC8BE ;"}

-   A técnica é muito utilizada na solução de problemas de classificação ou seja, onde o resultado(desfecho) é uma classe (e.g. gato, cachorro, cavalo).

-   Neste exemplo, nós temos uma linha de produção com sensores que registra características como largura e comprimento da pétala e sepala dos três tipos de flores iris: **setosa**, **versicolor** e **virgínica**.

-   Nosso objetivo é fazer um modelo de previsão que com base nessas características, consiga classificar cada tipo de flor e separá-las corretamente.

### [**De onde vem a demanda**]{style="color: #5AC8BE ;"}

-   Vem do uso de sistemas que utilizam visão computacional, processamento de linguagem natural como base para seu funcionamento ou melhoria como por exemplo veículos semi-autonomos, linhas de produção de veículos, controle de qualidade de autopeças entre outros.

-   A primeira rede neural artificial foi implementada em 1958 por Frank Rosenblat e se chamava **Perceptron** e naquela época já se falava que era um embrião de um computador eletronico que seria capaz de andar, falar, ver, escrever e se reproduzir. [Materia New York Times](https://www.nytimes.com/1958/07/13/archives/electronic-brain-teaches-itself.html)

### [**Como fazer**]{style="color: #5AC8BE ;"}

Neste exemplo usaremos os pacotes [tidyverse](https://www.tidyverse.org/), [janitor](https://cran.r-project.org/web/packages/janitor/vignettes/janitor.html), [tidymodels](https://www.tidymodels.org/), [nnet](https://cran.r-project.org/web/packages/nnet/index.html) e [neuralnettools](https://www.jstatsoft.org/article/view/v085i11)

```{r}
#| warning: false

# packages -------------------------------------------------------------
library(tidyverse)
library(tidymodels)
library(nnet)
library(NeuralNetTools)

# data -------------------------------------------------------------------
data_iris <- iris %>% janitor::clean_names()

split_iris <- initial_split(data_iris, strata = species)
train_iris <- training(split_iris)
test_iris  <- testing(split_iris)

# model ------------------------------------------------------------------
mdl_fit_nn_iris <- nnet(species ~., 
                        data = train_iris, 
                        size = 5, 
                        decay = 0.01, 
                        maxit = 500)

```

Vamos fazer uma previsão usando o modelo que construímos e jogar o resultado para dentro do dataframe de teste para podermos comparar entre o `previsto` vs `realizado`.

```{r}
# results ----------------------------------------------------------------
mdl_fit_nn_iris %>% 
  predict(test_iris,type = "class") %>%
  bind_cols(test_iris)
```

Como já temos o dados previstos e também o real, podemos fazer uma a matriz de confusão para facilitar a visualização dos resultados e analisar o desempenho inicial do modelo.

```{r}
#confusion matrix
table(test_iris$species,
      predict(mdl_fit_nn_iris,
              newdata = test_iris, 
              type = "class"))
```

Como ficou o resultado da previsão ?

```{r}
#| warning: false

#predict classes
predict(mdl_fit_nn_iris, test_iris, type = "class")

```

Plotando o modelo que acabamos de fazer

```{r}
#| warning: false
#| label: plot-neural-net


#plotando o gráfico
NeuralNetTools::plotnet(mdl_fit_nn_iris,pad_x=0.55, circle_col = "grey90")

```

### [**Pra onde vai quem é o cliente**]{style="color: #5AC8BE ;"}

-   Um modelos de previsão de classificação pode ser embarcado dentro do sistema de produção.
-   

### [**Qual o resultado**]{style="color: #5AC8BE ;"}

-   Aperfeiçoar

-   Facilitar

-   Melhorar.
