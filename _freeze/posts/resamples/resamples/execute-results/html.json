{
  "hash": "0f301f20f47183792f832d27a8c823c2",
  "result": {
    "markdown": "---\ntitle: \"Modelo preditivo | Amostra e reamostragens \"\nsubtitle: \"Funções úteis split de dados e resample que serão usados na validação e ajuste de modelos\"\nauthor: \"Marcelo Carvalho dos Anjos\"\ndate: \"2023-09-29\"\ncategories: [Modelos]\nimage: \"resample.png\"\nexecute: \n  output: FALSE\n---\n\n\n\n::: {.callout-tip appearance=\"simple\"} \nVídeo tema para este post em [Amostra e reamostragem com Rsample](https://youtu.be/xpZFLWg5CZA){target=\"_blank\"}\n:::\n\n### {{< fa 1 >}} [**O que é isto?**]{style=\"color: #5AC8BE ;\"}\n\n-   É a separação de um conjunto de dados em porções as quais serão usadas para diferentes etapas do modelo.\n-   A separação de um conjunto de dados em amostra de treino e teste é padrão na construção de modelos de machine learning e deep learning\n\n### {{< fa 2 >}} [**Qual é o objetivo?**]{style=\"color: #5AC8BE ;\"}\n\n-   Melhorar a acuracidade dos modelos é um dos principais objetivos uma vez que alguns modelos se adaptam muito rapidamente aos padrões dos dados de treino(decoram) e se estes forem usados para teste podem ter a acuracidade comprometida.\n-   As técnicas de reamostragem auxiliam no equilibro entre `bias` e `variance`\n\n### {{< fa 3 >}} [**De onde vem a demanda?**]{style=\"color: #5AC8BE ;\"}\n\n-   Melhorar o desempenho e acuracidade dos modelos.\n\n### {{< fa 4 >}} [**Como fazer isto?**]{style=\"color: #5AC8BE ;\"}\n\n**Pacotes**\n\nPara reproduzir os códigos abaixo serão necessários os pacotes [tidyverse](https://www.tidyverse.org/){target=\"_blank\"} , [tidymodels](https://www.tidymodels.org/){target=\"_blank\"},[tidyquant](https://github.com/business-science/tidyquant){target=\"_blank\"} e [quantmod](https://github.com/joshuaulrich/quantmod){target=\"_blank\"}\n\n**Dados**\n\nForam usados dados do conjunto `ames housing`,`DGS10`e`EWZ`como exemplo. Todos eles são possíveis acessar através dos códigos descritos abaixo.\n\n**Etapa do projeto**\n\n![](resample_flowchart.png){width=\"1200\"}\n\n**Código reproduzível**\n\n\n::: {.cell filename='Packages'}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(tidyquant)\nlibrary(quantmod) #freadR\nlibrary(scales)\n```\n:::\n\n::: {.cell filename='Models'}\n\n```{.r .cell-code}\n# data --------------------------------------------------------------------\n#ames housing case\ndata(ames)\n\ndata_ames <- \n  ames %>%\n  mutate(Sale_Price = log10(Sale_Price))\n\n# simple split ------------------------------------------------------------\nsplit_ames <- initial_split(ames, strata = Sale_Price)\ntrain_ames <- training(split_ames)\ntest_ames <- testing(split_ames)\n\n# validation split --------------------------------------------------------\nsplit_val_ames <- initial_validation_split(ames, strata = Sale_Price)\ntrain_val_ames <- training(split_val_ames)\nval_ames <- validation(split_val_ames)\ntest_val_ames <- testing(split_val_ames)\n\n# time split --------------------------------------------------------------\ndata_10y <- tq_get(\"DGS10\", get = \"economic.data\")\n\ndata_10y %>% \n  ggplot(aes(x = date, y = price))+\n  geom_line()\n\nsplit_10y <- initial_time_split(data_10y)\ntrain_10y <- training(split_10y)\ntest_10y <- testing(split_10y)\n\ntrain_10y %>% tail()\ntest_10y %>% head()\n\nc(max(train_10y$date), min(test_10y$date))\n\n# time split lag ----------------------------------------------------------\nsplit_10y_lag <- initial_time_split(data_10y, lag = 20)\ntrain_10y_lag <- training(split_10y_lag)\ntest_10y_lag <- testing(split_10y_lag)\n\ntrain_10y_lag %>% tail()\ntest_10y_lag %>% head()\nc(max(train_10y_lag$date), min(test_10y_lag$date))\n\n# resample simple ---------------------------------------------------------\nresample_ames <- vfold_cv(train_ames, strata = Sale_Price, v=10)\nresample_ames\n\n# resample time -----------------------------------------------------------\nresample_10y <- rolling_origin(train_10y_lag,\n                               initial = 50,\n                               assess = 10)\n\n# resample group ----------------------------------------------------------\nset.seed(1353)\ncar_split <- group_initial_split(mtcars, cyl)\ntrain_data <- training(car_split)\ntest_data <- testing(car_split)\n\n# resample time group -----------------------------------------------------\ngetSymbols(\"EWZ\")\n\nchartSeries(EWZ)\n\n#xts o df\nibov_usd <- fortify.zoo(EWZ) %>% janitor::clean_names()\n\n#reamostragem por grupo\nresample_ibov_usd <- \n  ibov_usd %>% \n  mutate(ym = as.POSIXlt(index)$year + 1900) %>% \n  nest(data = c(-ym)) %>% \n  rolling_origin(cumulative = FALSE)\n\nanalysis(resample_ibov_usd$splits[[2]]) \n\nassessment(resample_ibov_usd$splits[[2]]) \n```\n:::\n\n\n### {{< fa 5 >}} [**Quem é o consumidor?**]{style=\"color: #5AC8BE ;\"}\n\n-   As amostras e reamostragens serão usadas durante a etapa de construção, ajuste e validação de modelos\n\n### {{< fa 6 >}} [**Qual o resultado?**]{style=\"color: #5AC8BE ;\"}\n\n-   Aperfeiçoamento das técnicas separação entre dados de treino, teste, validação e reamostragem mais adequados para cada caso.\n\n-   Facilitar o trabalho e melhorar o processo para o grupo responsável pelas próximas etapas no projeto.\n\n-   Permitir a aplicação prática dos resultados dos modelos através da melhoria de acuracidade e poder preditivo gerando benefícios para os usuários do modelo e para a sociedade.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}